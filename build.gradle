
plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}


group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        client2 {
            parent runs.client

            args '--username=Dev2'
        }

        client3 {
            parent runs.client

            args '--username=Dev3'
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://girafi.dk/maven/' }

    maven {
        name = "Curse maven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
     flatDir {
         dir 'libs'
     }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("com.teammetallurgy.aquaculture:aquaculture2_${minecraft_version}:${minecraft_version}-2.5.2")
    compileOnly fg.deobf("curse.maven:architectury-forge-419699:5137938")
    compileOnly fg.deobf("curse.maven:rhino-416294:4944325")
    compileOnly fg.deobf("curse.maven:kubejs-forge-238086:5268032")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.0"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.4.0")) {
        jarJar.ranged(it, "[0.4.0,)")
    }
}

mixin {
    add sourceSets.main, 'mixins.stardew_fishing.refmap.json'
    config 'mixins.stardew_fishing.json'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
